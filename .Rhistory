So both the sample mean and variance are slightly higher than the theoretical mean and variance.
```{r}
h <- hist(means,breaks=50, main="Histogram of means drawn from exponential distribution samples", xlab="means")
xfit<-seq(min(means),max(means),length=40)
yfit<-dnorm(xfit,mean=mean(means),sd=sd(means))
yfit <- yfit*diff(h$mids[1:2])*length(means)
lines(xfit, yfit, col="blue", lwd=2)
abline(v = meanOfMeans, col = "blue", lwd = 2)
```
The fitted curve in the histogram shows that the distribution appears Gaussian as expeceted.
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
data()
data(ToothGrow)
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
ToothGrowth
str(ToothGrowth)
scatterplot(len,dose)
plot(len,dose)
plot(ToothGrowth$len,ToothGrowth$dose)
plot(ToothGrowth)
NEI <- readRDS("SummarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(plyr)
library(dplyr)
library(lattice)
NEIBaltimoreCity <- subset(NEI,fips=="24510")
NEIBaltimoreCityPoint <- subset(NEIBaltimoreCity,type=="POINT")
NEIBaltimoreCityNonPoint <- subset(NEIBaltimoreCity,type=="NONPOINT")
NEIBaltimoreCityOnRoad <- subset(NEIBaltimoreCity,type=="ON-ROAD")
NEIBaltimoreCityNonRoad <- subset(NEIBaltimoreCity,type=="NON-ROAD")
totalPM2.5BaltimoreCityPoint <- aggregate(Emissions~year, data=NEIBaltimoreCityPoint, sum)
totalPM2.5BaltimoreCityNonPoint <- aggregate(Emissions~year, data=NEIBaltimoreCityNonPoint, sum)
totalPM2.5BaltimoreCityOnRoad <- aggregate(Emissions~year, data=NEIBaltimoreCityOnRoad, sum)
totalPM2.5BaltimoreCityNonRoad <- aggregate(Emissions~year, data=NEIBaltimoreCityNonRoad, sum)
totalPM2.5BaltimoreCityPoint <- cbind(totalPM2.5BaltimoreCityPoint,c("POINT"))
names(totalPM2.5BaltimoreCityPoint) <- c("year","Emissions","type")
totalPM2.5BaltimoreCityNonPoint <- cbind(totalPM2.5BaltimoreCityNonPoint,c("NONPOINT"))
names(totalPM2.5BaltimoreCityNonPoint) <- c("year","Emissions","type")
totalPM2.5BaltimoreCityOnRoad <- cbind(totalPM2.5BaltimoreCityOnRoad,c("ON-ROAD"))
names(totalPM2.5BaltimoreCityOnRoad) <- c("year","Emissions","type")
totalPM2.5BaltimoreCityNonRoad <- cbind(totalPM2.5BaltimoreCityNonRoad,c("NON-ROAD"))
names(totalPM2.5BaltimoreCityNonRoad) <- c("year","Emissions","type")
totalPM2.5BaltimoreCityCut <- rbind(totalPM2.5BaltimoreCityPoint,totalPM2.5BaltimoreCityNonPoint,totalPM2.5BaltimoreCityOnRoad,totalPM2.5BaltimoreCityNonRoad)
library(ggplot2)
png(filename="plot3.png",width = 960, height = 480, units = "px")
par(mfrow=c(2,2))
qplot(year,Emissions,data=totalPM2.5BaltimoreCityCut,facets=.~type)+
xlab("year")+
ylab("Emissions in tons")+
ggtitle("Emissions by year for sources in Baltimore City\n")
dev.off()
library(ggplot2)
qplot(len,dose,data=ToothGrowth,facets=.~supp)+
+     xlab("year")+
+     ylab("Emissions in tons")+
+     ggtitle("Emissions by year for sources in Baltimore City\n")
library(ggplot2)
qplot(len,dose,data=ToothGrowth,facets=.~supp)+
ggtitle("Emissions by year for sources in Baltimore City\n")
qplot(len,dose,data=ToothGrowth,facets=.~supp)+
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp)+
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp)+
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")+
geom_point(aes(colour=cond2),
size=3)
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="orange"")+
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="orange") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="yellow") +
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="yellow") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different elivery methods\n")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp, colour=color) +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp, colour=red) +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp, geom = c("point","line")) +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp, geom = c("point","smooth")) +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red",theme(legend.position="none")) +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
lenForOJ <- ToothGrowth$len[ToothGrowth$supp="OJ"]
lenForOJ <- subset(ToothGrowth, supp="OJ")
OJData <- subset(ToothGrowth, supp="OJ")
VCData <- subset(ToothGrowth, supp="VC")
OJData
VCDATa
VCData
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
OJData
t.test(OJData$len,VCData$len)
mean(OJData$len)
mean(VCData$len)
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(OJData$len,VCData$len)
t.test(Dose1$len,Dose3$len)
t.test(Dose1Data$len,Dose3Data$len)
t.test(Dose2Data$len,Dose3Data$len)
t.test(Dose1Data$len,Dose2Data$len)
qplot(dose,len,data=ToothGrowth,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
library(ggplot2)
qplot(dose,len,data=ToothGrowth,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
# Analysis of Tooth Grow Data
In this analysis we are using the ToothGrowth dataset and the examing the effects of Vitamin C on Tooth Growth in Guinea pigs.
The data contains three variables:
len is a numeric variable giving the length of the Guinea pig's teeth.
supp is a factor variable with two levels and indicates the way in which the Vitamin C was delivered to the Guinea Pig. OJ indicates that Vitamin C was delivered with Orange Juice and VC indicates that it was delivered with ascorbic acid.
dose indicates the amount of vitamin C delivered to the Guinea pigs in mg.
The ToothGrowth data set is loaded and the data is summarized.
```{r}
data(ToothGrowth)
summary(ToothGrowth)
```
A plot of tooth length by dose for different delivery methods is produced.
```{r, echo=FALSE}
library(ggplot2)
qplot(dose,len,data=ToothGrowth,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
```
The plots seem to indicate that tooth length is greater for Guinea Pigs that receive a higher dose of Vitamin C. We will perform a test to check that this is statistically significant.
The null hypothesis is that does of Vitamin C has no effect on the lenght of the Teeth in Guinea Pigs
The alternative hypothesis is that the dose of Vitamin C has an effect on Tooth Growth
The null hypthesis is that the delivery method has no effect on tooth growth.
mean of OJ = mean of VC
The alternative hypothesis is the delvery method does have an effect on tooth growth.
mean of OJ <> mean of VC.
Since both the OJ and VC Groups each been treated identically apart from the deliery method we can perform this test by comparing the overall means of both groups.
Under the null hypothesis
$\overset{-}{X}-\overset{-}{Y}~N$
```{r}
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(OJData$len,VCData$len)
t.test(Dose1Data$len,Dose2Data$len)
```
Assumpitons : variance the same
frequency of doseage the same
the sample is representative of the population from which it is drawn.
Since the 95% confidence interval contains zero we do not reject the null hypothesis at the 95% confidence interval level. There is insufficient evidence to suggest that the delivery method has an effect on tooth growth.
$H_0$ :
# Analysis of Tooth Grow Data
# Synopsis
In this analysis we are using the ToothGrowth dataset and the examining the effects of Vitamin C on Tooth Growth in Guinea pigs.
The data contains three variables:
len - a numeric variable giving the length of the Guinea pig's teeth.
supp - a factor variable with two levels and indicates the way in which the Vitamin C was delivered to the Guinea Pig. OJ indicates that Vitamin C was delivered with Orange Juice and VC indicates that it was delivered with Ascorbic Acid.
dose - indicates the amount of vitamin C delivered to the Guinea pigs in mg.
# Data processing and exploratory analysis
The ToothGrowth data set is loaded and the data is summarized.
```{r}
data(ToothGrowth)
summary(ToothGrowth)
```
Tooth length by dose is plotted and Tootj length by dose split by delivery method is plotted.
```{r, echo=FALSE}
library(ggplot2)
qplot(dose,len,data=ToothGrowth,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="red") +
ggtitle("Tooth length against dose of Vitamin C in Guinea pigs for different delivery methods\n")+
theme(legend.position="none")+
xlab("Dose")+
ylab("Tooth length")
```
The plots seem to indicate that tooth length is greater for Guinea Pigs that receive a higher dose of Vitamin C.
# Testing the impact of delivary method
We wish to test if the delivery method has a statistically significant effect on the length of teeth.
We assume that sample of Guinea Pigs was drawn in an unbiased way and that we are therefore able to use it to estmiate population parameters. there is no difference in the way that the sample of Guinea Pigs receiving Vitamin C through Orange Juice and the sample of Guinea Pigs receiving Vitamin C via Ascorbic Acid were drawn, and therefore that the two samples are unbiased.
Let $\overset{-}{X}$ be the estimate of the population mean from the Orange Juice sample and $\overset{-}{Y}$ be the estimate of the population mean from the Ascerbic Acid sample.
$H_0$ : The delivery method does not have an effect on tooth growth. $\mu_X$ = $\mu_Y$
$H_1$ : The delivery method does have an effect on tooth growth. $\mu_X \neq \mu_Y$
$\overset{-}{X}-\overset{-}{Y} \sim$
```{r}
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(OJData$len,VCData$len)
t.test(Dose1Data$len,Dose2Data$len)
```
Assumpitons : variance the same
frequency of doseage the same
the sample is representative of the population from which it is drawn.
Since the 95% confidence interval contains zero we do not reject the null hypothesis at the 95% confidence interval level. There is insufficient evidence to suggest that the delivery method has an effect on tooth growth.
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(OJData$len,VCData$len)
t.test(Dose1Data$len,Dose2Data$len)
var(OJData$len)
var(VCData$len)
t.test(OJData$len,VCData$len,var.equal=TRUE)
t.test(OJData$len,VCData$len,var.equal=FALSE)
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(OJData$len,VCData$len,var.equal=TRUE)
t.test(OJData$len,VCData$len,var.equal=FALSE)
t.test(Dose3Data$len,Dose2Data$len,var.equal=FALSE)
t.test(Dose3Data$len,Dose1Data$len,var.equal=FALSE)
t.test(Dose2Data$len,Dose2Data$len,var.equal=FALSE)
t.test(Dose3Data$len,Dose2Data$len,var.equal=FALSE)
t.test(Dose3Data$len,Dose1Data$len,var.equal=FALSE)
t.test(Dose2Data$len,Dose1Data$len,var.equal=FALSE)
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
t.test(Dose3Data$len,Dose2Data$len,var.equal=FALSE)
t.test(Dose2Data$len,Dose1Data$len,var.equal=FALSE)
randomExp <- NULL
for (i in 1:1000) randomExp <- c(randomExp, rexp(40,0.2))
h <- hist(randomExp,breaks=50, main="Means from exponential distribution samples", xlab="means")
xfit<-seq(min(means),max(means),length=40)
yfit<-dnorm(xfit,mean=mean(means),sd=sd(means))
yfit <- yfit*diff(h$mids[1:2])*length(means)
lines(xfit, yfit, col="blue", lwd=2)
abline(v = meanOfMeans, col = "blue", lwd = 2)
h <- hist(randomExp,breaks=50, main="Random numbers from the exponential distribution", xlab="number")
h <- hist(randomExp,breaks=50, main="1000 numbers from the exponential distribution", xlab="number")
h <- hist(randomExp,breaks=50, main="5000 numbers from an exponential distribution", xlab="number", xlim=40)
h <- hist(randomExp,breaks=50, main="5000 numbers from an exponential distribution", xlab="number", xlim="40")
h <- hist(randomExp,breaks=50, main="5000 numbers from an exponential distribution", xlab="number", xlim=c(0,40)
)
```
---
output: word_document
---
## Analysis of Tooth Grow Data
## Synopsis
In this analysis we will examine the effects of different doses and delivery methods of Vitamin C on Tooth Growth in Guinea pigs.
We will use the ToothGrowth dataset in R. The data contains three variables:
len - a numeric variable giving the length of the Guinea pig's teeth.
supp - a factor variable with two levels and indicates the way in which the Vitamin C was delivered to the Guinea Pig. OJ indicates that Vitamin C was delivered with Orange Juice and VC indicates that it was delivered with Ascorbic Acid.
dose - indicates the amount of vitamin C delivered to the Guinea pigs in mg.
## Plots
Figure 1 suggests that tooth length may be greater for Guinea pigs that receive higher doses of Vitamin C.
Figure 2 it is less clear if the means by which Vitamin C is delivered has a significant impact on the tooth length.
## Assumptions
The sample has been randomly selected from the population
The subjects have been assigned in an unbiased way to the doses and delivery methods.
The sample variance is the same regardless of dose or delivery method
## Testing Tooth length against dosage
We will perform two 2-sided hypotheses tests to test whether the mean tooth length differs depending on the size of the doses received.
We will test doses of 2mg against doses of 1mg and doses of 1mg against doses of 0.5mg.
$H_0$ : There is no difference in means between the two groups. $\mu_X$ = $\mu_Y$
$H_1$ : There is a difference in means between the two groups. $\mu_X \neq \mu_Y$
Under the null hypothesis :
Let $\overset{-}{X}$ be the estimate of the population mean from the Orange Juice sample and $\overset{-}{Y}$ be the estimate of the population mean from the Ascerbic Acid sample.
$\overset{-}{X}-\overset{-}{Y} \sim N(0,)
## Results
The difference in means between the two groups receiving 2mg and 1mg is 6.365 which, under our null hypothesis, has a 95% confidence interval of (3.733519,8.996481). Since the confidence interval does not contain 0 we reject the null hypothesis in favour of the alternative hypothesis.
The group that received doses of 2mg has greater tooth length than the group receiving doses of 1mg.
The difference in means between the two groups receiving 2mg and 1mg is 9.13 units which, under our null hypothesis, has a 95% confidence interval of (6.276219, 11.983781). Again, since the confidence interval does not contain 0 we reject the null hypothesis in favour of the alternative hypothesis.
The group that received doses of 1mg has greater tooth length than the group receiving doses of 0.5mg.
## Testing the impact of the delivery method on length of teeth
We wish to test if the delivery method has a statistically significant effect on the length of teeth.
We will perform a 2-sided test.
$H_0$ : The delivery method does not have an effect on tooth growth. $\mu_X$ = $\mu_Y$
$H_1$ : The delivery method does have an effect on tooth growth. $\mu_X \neq \mu_Y$
The difference in means between the two groups receiving Vitamin C via Orange Juice and Ascorbic Acid is 3.7 which, under our null hypothesis, has a 95% confidence interval of (-0.171, 7.571). In this case the confidence interval does contain 0 and therefore there is insufficient evidence to conclude that delivery method has an effect on tooth length. We do not reject the null hypothesis.
# Appendix
Data and libraries are loaded. The data is summarised and subsetted.
```{r}
library(datasets)
library(ggplot2)
data(ToothGrowth)
summary(ToothGrowth)
Dose1Data <- subset(ToothGrowth, dose==0.5)
Dose2Data <- subset(ToothGrowth, dose==1.0)
Dose3Data <- subset(ToothGrowth, dose==2.0)
OJData <- subset(ToothGrowth, supp=="OJ")
VCData <- subset(ToothGrowth, supp=="VC")
```
Data is plotted.
Figure 1
```{r, setoptions,echo=TRUE,warning=FALSE,message=FALSE}
qplot(dose,len,data=ToothGrowth,colour="red") +
ggtitle("Tooth length against size of doses\n")+
theme(legend.position="none")+
xlab("Dose (mg)")+
ylab("Tooth length")
```
Figure 2
```{r}
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="green") +
ggtitle("Tooth length against size of doses by delivery methods\n")+
theme(legend.position="none")+
xlab("Dose (mg)")+
ylab("Tooth length")
```
t-tests between groups receiving different doses.
```{r}
t.test(Dose3Data$len,Dose2Data$len,var.equal=FALSE)
t.test(Dose2Data$len,Dose1Data$len,var.equal=FALSE)
```
t-tests between groups receiving different delivery methods.
```{r}
t.test(OJData$len,VCData$len)
```
$\overline{X}-\overline{Y} \sim N(0,)
help(ToothGrowth)
t.test(Dose3Data$len,Dose2Data$len)
t.test(Dose2Data$len,Dose1Data$len)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="green") +
ggtitle("Figure 2: Tooth length against size of doses by delivery methods\n")+
theme(legend.position="none")+
xlab("Dose (mg)")+
ylab("Tooth length")+
theme(text = element_text(size=20)
)
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="green") +
ggtitle("Figure 2: Tooth length against size of doses by delivery methods\n")+
theme(legend.position="none")+
xlab("Dose (mg)")+
ylab("Tooth length")+
theme(text = element_text(size=10))
qplot(dose,len,data=ToothGrowth,facets=.~supp,colour="green") +
ggtitle("Figure 2: Tooth length against size of doses by delivery methods\n")+
theme(legend.position="none")+
xlab("Dose (mg)")+
ylab("Tooth length")+
theme(text = element_text(size=14))
var(Dose3Data)
var(Dose3Data$len)
var(Dose2Data$len)
where $\overline{X}$ is the sample mean from the Orange Juice sample and $\overline{Y}$ is the sample mean from the Ascorbic Acid sample. $n_x$ is the size of the Orange Juice sample and $n_y$ is the size of the Ascorbic Acid sample. $\alpha is the rejection region for the test, 5% in this case. $S_p$ is the pooled standard deviation.
pt(3,4,lower.tail=FALSE)
choose(4,3)*0.5^4 + choose(4,4) * 0.5^4
pbinom(9, size=1787, prob 0.01, lower.tail=FALSE)
pbinom(9, size=1787, prob= 0.01, lower.tail=FALSE)
pbinom(10, size=1787, prob= 0.01, lower.tail=FALSE)
ppois(9, size=1787, lower.tail=FALSE)
ppois(10, 17.87, lower.tail=FALSE)
args(ppois)
ppois
?ppois
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
data(mtcars)
rm(list=ls()
)
rm(list=ls()
data(mtcars)
data(mtcars)
summary(mtcars)
fit <- lm(mpg<-cyl+wt,mtcars)
fit <- lm(mpg ~ cyl+wt,mtcars)
summary(fit)$coef
mean(mtcars$mpg[cyl=="4"])
mean(mtcars$mpg[mtcars$cyl=="4"])
mean(mtcars$mpg[mtcars$cyl=="8"])
str(mtcars)
fit <- lm(mpg ~ wt + factor(cyl),mtcars)
summarry(fit)
summary(fit)
fit2 <- lm(mpg ~ factor(cyl),mtcars)
summary(fit2)
fit3 <- lm(mpg ~ factor(cyl)*wt,mtcars)
summary(fit3)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
z <- lm(x~y)
influence(z)
lm.influence(z)
hat(z)
hat(z,intercept=TRUE)
z <- lm(y~x)
lm.influence(z)
dfbeta(z)
dfbetas(z)
fit4 <- lm(mpg ~ I(wt*0.5)+factor(cyl),data=mtcars)
summary(fit4)
?mtcars
?influence
library(shiny)
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Example')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Example')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Example')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
install.package("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
devtools::install_github('rstudio/shinyapps')
install.packages("RCurl")
devtools::install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='joeproject', token='AD71FC87586A1221EAC6090BCC2AD96E', secret='e5sfQfOTe49t0SSs0SGihOBuYLBodrKKyWcxWf3w')
library(shinyapps)
shinyapps::deploy("C:\\Users\\Joe\\_LEARNING_todo\\___Data Science\\9 Developing Data Products\\Project")
shinyapps::deployApp("C:\\Users\\Joe\\_LEARNING_todo\\___Data Science\\9 Developing Data Products\\Project")
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
deployApp
deployApp()
shiny::runApp('C:/Users/Joe/_LEARNING_todo/___Data Science/9 Developing Data Products/Project')
shinyapps::deployApp("C:\\Users\\Joe\\_LEARNING_todo\\___Data Science\\9 Developing Data Products\\Project")
respondents <- 750
promoters <- 480
detractors <- 150
((promoters/respondents)-(detractors/respondents))*100
library(shinyapps)
library(knitr)
library(slidify)
slidify("index.Rmd")
setwd("C:\\Users\\Joe\\_LEARNING_todo\\___Data Science\\9 Developing Data Products\\Slidify Project\\DDP_Course_Project\\")
slidify("index.Rmd")
